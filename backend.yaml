
# - name: Configuring the backend
#   hosts: backend
#   become: yes
#   vars_prompt: 
#   - name: login_password
#     prompt: enter the password
#     private: no
#   vars:
#     host: backend.vijayganisetti.online

#   tasks:
#   - name: disable Node.
#     ansible.builtin.command: dnf module disable nodejs -y
        

#   - name: Enable Node js 20 module
#     ansible.builtin.command: dnf module enable nodejs:20 -y

#   - name: install nodejs
#     ansible.builtin.dnf: # only works for Redhat family
#       name: "{{ item }}"
#       state: installed
#     loop:
#     - nodejs
#     - mysql

#   - name: Create expense user
#     ansible.builtin.user:
#       name: expense
  
#   - name: create app directory
#     ansible.builtin.file:
#        path: /app
#        state: directory

#   - name: download backend code
#     ansible.builtin.get_url:
#      url: http://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
#      dest: /tmp/backend.zip

#   - name: Unarchive a file 
#     ansible.builtin.unarchive:
#       src: /tmp/backend.zip
#       dest: /app
#       remote_src: yes

#   - name: install npm dependencies
#     ansible.builtin.command: npm install
#     args:
#       chdir: /app


#   - name: copy backend service
#     ansible.builtin.copy:
#       src: backend.service
#       dest: /etc/systemd/system/backend.service

#   - name: install python mysql dependencies
#     ansible.builtin.pip: 
#       name:
#       - PyMySQL # to connect MySQL DB from Ansible
#       - cryptography
#       executable: pip3.9 # pip3.11 if python version is 3.11

 
#   - name: import data into mysql
#     community.mysql.mysql_db:
#       login_user: root
#       login_password: "{{ login_password }}"
#       login_host: "{{ host }}"
#       target: /app/schema/backend.sql
#       state: import
#       name: all

- name: configure backend server
  become: yes
  hosts: backend
  vars:
    login_host: backend.vijayganisetti.online
    login_password: ExpenseApp@1
  tasks:
  - name: disable default nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs:20
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs
    ansible.builtin.dnf: # only works for Redhat family
      name: nodejs
      state: installed
  - name: install sql
    ansible.builtin.dnf:
      name: mysql
      state: installed

  - name: create expense user
    ansible.builtin.user:
      name: expense

  - name: create app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download backend code
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  - name: unzip backend code
    ansible.builtin.unarchive:
      src: /tmp/backend.zip # by default checks in ansible server
      dest: /app
      remote_src: yes

  - name: install npm dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: copy backend service
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: install python mysql dependencies
    ansible.builtin.pip: 
      name:
      - PyMySQL # to connect MySQL DB from Ansible
      - cryptography
      executable: pip3.9 # pip3.11 if python version is 3.11

  - name: import the data in to sql
    community.mysql.mysql_db:
      login_user: root
      login_password: ExpenseApp@1
      login_host: db.vijayganisetti.online
      state: import
      name: all
      target: /app/schema/backend.sql
  
  - name: daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true

  
